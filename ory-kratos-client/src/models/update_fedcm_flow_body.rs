/*
 * Ory Identities API
 *
 * This is the API specification for Ory Identities with features such as registration, login, recovery, account verification, profile settings, password reset, identity management, session management, email and sms delivery, and more. 
 *
 * The version of the OpenAPI document: v1.3.8
 * Contact: office@ory.sh
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UpdateFedcmFlowBody {
    /// CSRFToken is the anti-CSRF token.
    #[serde(rename = "csrf_token")]
    pub csrf_token: String,
    /// Nonce is the nonce that was used in the `navigator.credentials.get` call. If specified, it must match the `nonce` claim in the token.
    #[serde(rename = "nonce", skip_serializing_if = "Option::is_none")]
    pub nonce: Option<String>,
    /// Token contains the result of `navigator.credentials.get`.
    #[serde(rename = "token")]
    pub token: String,
}

impl UpdateFedcmFlowBody {
    pub fn new(csrf_token: String, token: String) -> UpdateFedcmFlowBody {
        UpdateFedcmFlowBody {
            csrf_token,
            nonce: None,
            token,
        }
    }
}

